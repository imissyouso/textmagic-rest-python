# coding: utf-8

"""
    TextMagic API Documentation

    # Overview ## Introduction test <img style=\"float: right; margin-left: 10px; width: 100px;\" src=\"images/phone.png\"> TextMagic SMS API is a platform for building your own messaging app using our messaging infrastructure. It allows you to send and receive SMS text messages, query information about inbound and outbound messages, manage contacts, create templates (i.e. message formats and static texts) and schedule recurrent SMS messages as well as process bulk SMS messages. <button name=\"button\" onclick=\"http://www.google.com\" class=\"btn\">Try TextMagic API for Free</button>  ### Two Ways to Use TextMagic API * [REST API](https://www.textmagic.com/docs/api/start/) – get full access to TextMagic’s messaging gateway features * [Email to SMS API](https://www.textmagic.com/docs/api/send-email-to-sms/) – set up two-way SMS communication without the need to write any additional code  ### Code Libraries We have created a set of client libraries for the most popular programming languages (such as REST API Java and REST API PHP). These libraries allow you to integrate our API into your code in minutes. Just choose your preferred language to get started:  ## Getting started Get Started with the TextMagic REST API To start sending text messages using the TextMagic REST API, just follow these steps: 1. Generate the API credentials 1. Connect to our API endpoint This page provides all the information you need to get started. Here, we explain the following steps:  How to obtain the API credentials The API endpoint How the REST API works The next step How to obtain the API credentials  ### How to obtain the API credentials To start sending text messages, you need to create an API key. API keys are similar to an account password; the difference is that an API key only provides access to the API: you cannot log in to TextMagic Online using the API key.  Your program sends the login credentials with each API request as HTTP headers: `X-TM-Username` is your TextMagic username, while `X-TM-Key` is your API key.  How to obtain an API key:  1. Log in to TextMagic (or start a free trial if you haven’t registered yet). 1. Go to the API settings page. 1. Click the Add new API key button. 1. Enter an app name for this key. Note, it’s just a label, so pick any name. 1. Click Generate new key. 1. You should now see your new API key in the green notification banner above the table:  ![alt text](images/credentials.png)  > Note for API v1 users > V1 keys are not compatible with the V2 version of the TextMagic REST API, so you will need to generate a new API key to use the V2 endpoint.  ### The API endpoint The TextMagic REST API endpoint is: ``` https://rest.textmagic.com/api/v2 ``` All the URLs referenced in this documentation should use this base URL.  ### How the REST API works REST APIs use the HTTP protocol to send and receive messages. REST messages are usually encoded as JSON documents and are an improvement over older methods such as the XML based SOAP protocol. REST APIs use the same set of methods that web browsers use: POST, GET, PUT or DELETE. These correspond to the CRUD operations: create, read, update and delete. Often, REST URIs provide direct CRUD access to entities or collections of entities, for example: http://api.foo.com/people. In this instance, to delete a person’s endpoint, you might simply call the endpoint DELETE http://api.foo.com/people/{id}. REST makes these types of operations simple.  > Example > > Let’s take the entity most often used in messaging: contacts. Imagine you want to perform operations on your contacts list: well, it’s only a matter of calling the following endpoints: > * GET /api/v2/contacts (get all of your contacts) > * GET /api/v2/contacts/{id} (get a specific contact) > * POST /api/v2/contacts (create a new contact) > * PUT /api/v2/contacts/{id} (update an existing contact) > * DELETE /api/v2/contacts/{id} (delete an existing contact) It’s that simple! In fact, that’s all you need to do to manage the contacts in your TextMagic account!  ## Sandbox Sandbox is a tool to test TextMagic REST API requests without the need to install any applications or write any code. Here, we explain the following details about Sandbox: * The credentials area * Command documentation * How it works  <a href=\"\">Go to TextMagic Sandbox</a>  ### The credentials area To make requests using your TextMagic account, you need to enter your account username and your API key into the corresponding fields. You may also Save them in your browser or press Clear to erase them.  ![alt text](images/sandbox.png)   # noqa: E501

    OpenAPI spec version: 2
    Contact: support@textmagi.biz
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import TextMagic
from Api.text_magic_api import TextMagicApi  # noqa: E501
from TextMagic.rest import ApiException


class TestTextMagicApi(unittest.TestCase):
    """TextMagicApi unit test stubs"""

    def setUp(self):
        self.api = Api.text_magic_api.TextMagicApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_assign_contacts_to_list(self):
        """Test case for assign_contacts_to_list

        Assign contacts to the specified list.  # noqa: E501
        """
        pass

    def test_block_contact(self):
        """Test case for block_contact

        Block contact from inbound and outbound communication by phone number.  # noqa: E501
        """
        pass

    def test_buy_dedicated_number(self):
        """Test case for buy_dedicated_number

        Buy a dedicated number and assign it to the specified account.  # noqa: E501
        """
        pass

    def test_cancel_survey(self):
        """Test case for cancel_survey

        Cancel a survey.  # noqa: E501
        """
        pass

    def test_check_phone_verification_code(self):
        """Test case for check_phone_verification_code

        Check user phone verification code  # noqa: E501
        """
        pass

    def test_clear_and_assign_contacts_to_list(self):
        """Test case for clear_and_assign_contacts_to_list

        Reset list members to the specified contacts.  # noqa: E501
        """
        pass

    def test_close_chats_bulk(self):
        """Test case for close_chats_bulk

        Close chats by chat ids or close all chats  # noqa: E501
        """
        pass

    def test_close_read_chats(self):
        """Test case for close_read_chats

        Close all chats that have no unread messages.  # noqa: E501
        """
        pass

    def test_close_subaccount(self):
        """Test case for close_subaccount

        Close subaccount.  # noqa: E501
        """
        pass

    def test_create_contact(self):
        """Test case for create_contact

        Create a new contact from the submitted data.  # noqa: E501
        """
        pass

    def test_create_contact_note(self):
        """Test case for create_contact_note

        Create a new contact note.  # noqa: E501
        """
        pass

    def test_create_custom_field(self):
        """Test case for create_custom_field

        Create a new custom field from the submitted data.  # noqa: E501
        """
        pass

    def test_create_list(self):
        """Test case for create_list

        Create a new list from the submitted data.  # noqa: E501
        """
        pass

    def test_create_push_token(self):
        """Test case for create_push_token

        Add or update a device token.  # noqa: E501
        """
        pass

    def test_create_survey(self):
        """Test case for create_survey

        Create a new survey from the submitted data.  # noqa: E501
        """
        pass

    def test_create_survey_node(self):
        """Test case for create_survey_node

        Create a new node from the submitted data.  # noqa: E501
        """
        pass

    def test_create_template(self):
        """Test case for create_template

        Create a new template from the submitted data.  # noqa: E501
        """
        pass

    def test_delete_all_contacts(self):
        """Test case for delete_all_contacts

        Delete all contacts.  # noqa: E501
        """
        pass

    def test_delete_all_outbound_messages(self):
        """Test case for delete_all_outbound_messages

        Delete all messages  # noqa: E501
        """
        pass

    def test_delete_avatar(self):
        """Test case for delete_avatar

        Delete an avatar for the current user.\\  # noqa: E501
        """
        pass

    def test_delete_chat_messages(self):
        """Test case for delete_chat_messages

        Delete messages from chat by given messages ID(s).  # noqa: E501
        """
        pass

    def test_delete_chats_bulk(self):
        """Test case for delete_chats_bulk

        Delete chats by given ID(s) or delete all chats.  # noqa: E501
        """
        pass

    def test_delete_contact(self):
        """Test case for delete_contact

        Delete a single contact.  # noqa: E501
        """
        pass

    def test_delete_contact_avatar(self):
        """Test case for delete_contact_avatar

        Delete an avatar for the contact.  # noqa: E501
        """
        pass

    def test_delete_contact_note(self):
        """Test case for delete_contact_note

        Delete a single contact note.  # noqa: E501
        """
        pass

    def test_delete_contact_notes_bulk(self):
        """Test case for delete_contact_notes_bulk

        Delete contact note by given ID(s) or delete all contact notes.  # noqa: E501
        """
        pass

    def test_delete_contacts_by_ids(self):
        """Test case for delete_contacts_by_ids

        Delete contact by given ID(s) or delete all contacts.  # noqa: E501
        """
        pass

    def test_delete_contacts_from_list(self):
        """Test case for delete_contacts_from_list

        Unassign contacts from the specified list.  # noqa: E501
        """
        pass

    def test_delete_custom_field(self):
        """Test case for delete_custom_field

        Delete a single custom field.  # noqa: E501
        """
        pass

    def test_delete_dedicated_number(self):
        """Test case for delete_dedicated_number

        Cancel dedicated number subscription.  # noqa: E501
        """
        pass

    def test_delete_inbound_message(self):
        """Test case for delete_inbound_message

        Delete the incoming message.  # noqa: E501
        """
        pass

    def test_delete_inbound_messages_bulk(self):
        """Test case for delete_inbound_messages_bulk

        Delete inbound messages by given ID(s) or delete all inbound messages.  # noqa: E501
        """
        pass

    def test_delete_list(self):
        """Test case for delete_list

        Delete a single list.  # noqa: E501
        """
        pass

    def test_delete_list_avatar(self):
        """Test case for delete_list_avatar

        Delete an avatar for the list.  # noqa: E501
        """
        pass

    def test_delete_list_contacts_bulk(self):
        """Test case for delete_list_contacts_bulk

        Delete contact from list by given ID(s) or all contacts from list.  # noqa: E501
        """
        pass

    def test_delete_lists_bulk(self):
        """Test case for delete_lists_bulk

        Delete list by given ID(s) or delete all lists.  # noqa: E501
        """
        pass

    def test_delete_message_session(self):
        """Test case for delete_message_session

        Delete a message session, together with all nested messages.  # noqa: E501
        """
        pass

    def test_delete_message_sessions_bulk(self):
        """Test case for delete_message_sessions_bulk

        Delete messages sessions, together with all nested messages, by given ID(s) or delete all messages sessions.  # noqa: E501
        """
        pass

    def test_delete_outbound_message(self):
        """Test case for delete_outbound_message

        Delete message  # noqa: E501
        """
        pass

    def test_delete_outbound_messages_bulk(self):
        """Test case for delete_outbound_messages_bulk

        Delete messages by IDs  # noqa: E501
        """
        pass

    def test_delete_push_token(self):
        """Test case for delete_push_token

        Delete a push notification device token.  # noqa: E501
        """
        pass

    def test_delete_scheduled_message(self):
        """Test case for delete_scheduled_message

        Delete a message session, together with all nested messages.  # noqa: E501
        """
        pass

    def test_delete_scheduled_messages_bulk(self):
        """Test case for delete_scheduled_messages_bulk

        Delete scheduled messages by given ID(s) or delete all scheduled messages.  # noqa: E501
        """
        pass

    def test_delete_sender_id(self):
        """Test case for delete_sender_id

        Delete a Sender ID.  # noqa: E501
        """
        pass

    def test_delete_survey(self):
        """Test case for delete_survey

        Delete a survey.  # noqa: E501
        """
        pass

    def test_delete_survey_node(self):
        """Test case for delete_survey_node

        Delete a node.  # noqa: E501
        """
        pass

    def test_delete_template(self):
        """Test case for delete_template

        Delete a single template.  # noqa: E501
        """
        pass

    def test_delete_templates_bulk(self):
        """Test case for delete_templates_bulk

        Delete template by given ID(s) or delete all templates.  # noqa: E501
        """
        pass

    def test_do_auth(self):
        """Test case for do_auth

        Authenticate user by given username and password.  # noqa: E501
        """
        pass

    def test_do_carrier_lookup(self):
        """Test case for do_carrier_lookup

        Carrier Lookup  # noqa: E501
        """
        pass

    def test_do_email_lookup(self):
        """Test case for do_email_lookup

        Validate Email address using Email Lookup tool  # noqa: E501
        """
        pass

    def test_duplicate_survey(self):
        """Test case for duplicate_survey

        Duplicate a survey.  # noqa: E501
        """
        pass

    def test_get_all_bulk_sessions(self):
        """Test case for get_all_bulk_sessions

        Get all bulk sending sessions.  # noqa: E501
        """
        pass

    def test_get_all_chats(self):
        """Test case for get_all_chats

        Get all user chats.  # noqa: E501
        """
        pass

    def test_get_all_inbound_messages(self):
        """Test case for get_all_inbound_messages

        Get all inbox messages.  # noqa: E501
        """
        pass

    def test_get_all_message_sessions(self):
        """Test case for get_all_message_sessions

        Get all message sending sessions.  # noqa: E501
        """
        pass

    def test_get_all_outbound_messages(self):
        """Test case for get_all_outbound_messages

        Get all messages  # noqa: E501
        """
        pass

    def test_get_all_scheduled_messages(self):
        """Test case for get_all_scheduled_messages

        Get all scheduled messages.  # noqa: E501
        """
        pass

    def test_get_all_templates(self):
        """Test case for get_all_templates

        Get all user templates.  # noqa: E501
        """
        pass

    def test_get_available_dedicated_numbers(self):
        """Test case for get_available_dedicated_numbers

        Find available dedicated numbers to buy.  # noqa: E501
        """
        pass

    def test_get_available_sender_setting_options(self):
        """Test case for get_available_sender_setting_options

        Get all available sender setting options which could be used in \"from\" parameter of POST messages method.  # noqa: E501
        """
        pass

    def test_get_balance_notification_options(self):
        """Test case for get_balance_notification_options

        Returns the list of available balance options which can be used as a bound to determine when to send email to user with low balance notification. See https://my.textmagic.com/online/account/notifications/balance  # noqa: E501
        """
        pass

    def test_get_balance_notification_settings(self):
        """Test case for get_balance_notification_settings

        Get balance notification settings  # noqa: E501
        """
        pass

    def test_get_blocked_contacts(self):
        """Test case for get_blocked_contacts

        Get blocked contacts.  # noqa: E501
        """
        pass

    def test_get_bulk_session(self):
        """Test case for get_bulk_session

        Get bulk message session status.  # noqa: E501
        """
        pass

    def test_get_callback_settings(self):
        """Test case for get_callback_settings

        Fetch callback URL settings  # noqa: E501
        """
        pass

    def test_get_calls_prices(self):
        """Test case for get_calls_prices

        Check pricing for a inbound/outbound call.  # noqa: E501
        """
        pass

    def test_get_chat(self):
        """Test case for get_chat

        Get a single chat.  # noqa: E501
        """
        pass

    def test_get_chat_by_phone(self):
        """Test case for get_chat_by_phone

        Find chats by phone.  # noqa: E501
        """
        pass

    def test_get_chat_messages(self):
        """Test case for get_chat_messages

        Fetch messages from chat with specified chat id.  # noqa: E501
        """
        pass

    def test_get_contact(self):
        """Test case for get_contact

        Get a single contact.  # noqa: E501
        """
        pass

    def test_get_contact_by_phone(self):
        """Test case for get_contact_by_phone

        Get a single contact by phone number.  # noqa: E501
        """
        pass

    def test_get_contact_if_blocked(self):
        """Test case for get_contact_if_blocked

        Check is that phone number blocked  # noqa: E501
        """
        pass

    def test_get_contact_import_session_progress(self):
        """Test case for get_contact_import_session_progress

        Get contact import session progress.  # noqa: E501
        """
        pass

    def test_get_contact_note(self):
        """Test case for get_contact_note

        Get a single contact note.  # noqa: E501
        """
        pass

    def test_get_contact_notes(self):
        """Test case for get_contact_notes

        Fetch notes assigned to the given contact.  # noqa: E501
        """
        pass

    def test_get_contacts(self):
        """Test case for get_contacts

        Get all user contacts.  # noqa: E501
        """
        pass

    def test_get_contacts_autocomplete(self):
        """Test case for get_contacts_autocomplete

        Get contacts autocomplete suggestions by given search term.  # noqa: E501
        """
        pass

    def test_get_contacts_by_list_id(self):
        """Test case for get_contacts_by_list_id

        Fetch user contacts by given group id.  # noqa: E501
        """
        pass

    def test_get_countries(self):
        """Test case for get_countries

        Return list of countries.  # noqa: E501
        """
        pass

    def test_get_current_user(self):
        """Test case for get_current_user

        Get current user info.  # noqa: E501
        """
        pass

    def test_get_custom_field(self):
        """Test case for get_custom_field

        Get a single custom field.  # noqa: E501
        """
        pass

    def test_get_custom_fields(self):
        """Test case for get_custom_fields

        Get all contact custom fields.  # noqa: E501
        """
        pass

    def test_get_dedicated_number(self):
        """Test case for get_dedicated_number

        Get a single dedicated number.  # noqa: E501
        """
        pass

    def test_get_disallowed_rules(self):
        """Test case for get_disallowed_rules

        Get an array of all rules that are disallowed to the current account.  # noqa: E501
        """
        pass

    def test_get_favourites(self):
        """Test case for get_favourites

        Get favorite contacts and lists.  # noqa: E501
        """
        pass

    def test_get_forwarded_calls(self):
        """Test case for get_forwarded_calls

        Get all forwarded calls.  # noqa: E501
        """
        pass

    def test_get_inbound_message(self):
        """Test case for get_inbound_message

        Get a single inbox message.  # noqa: E501
        """
        pass

    def test_get_inbound_messages_notification_settings(self):
        """Test case for get_inbound_messages_notification_settings

        Get inbound messages notification settings  # noqa: E501
        """
        pass

    def test_get_invoices(self):
        """Test case for get_invoices

        Return account invoices.  # noqa: E501
        """
        pass

    def test_get_list(self):
        """Test case for get_list

        Get a single list.  # noqa: E501
        """
        pass

    def test_get_list_contacts_ids(self):
        """Test case for get_list_contacts_ids

        Fetch all contacts IDs belonging to the list with ID.  # noqa: E501
        """
        pass

    def test_get_lists_of_contact(self):
        """Test case for get_lists_of_contact

        Return lists which contact belongs to.  # noqa: E501
        """
        pass

    def test_get_message_preview(self):
        """Test case for get_message_preview

        Preview message  # noqa: E501
        """
        pass

    def test_get_message_price(self):
        """Test case for get_message_price

        Check price  # noqa: E501
        """
        pass

    def test_get_message_prices(self):
        """Test case for get_message_prices

        Get pricing  # noqa: E501
        """
        pass

    def test_get_message_session(self):
        """Test case for get_message_session

        Get a message session.  # noqa: E501
        """
        pass

    def test_get_message_session_stat(self):
        """Test case for get_message_session_stat

        Get sending session statistics.  # noqa: E501
        """
        pass

    def test_get_messages_by_session_id(self):
        """Test case for get_messages_by_session_id

        Fetch messages by given session id.  # noqa: E501
        """
        pass

    def test_get_messaging_counters(self):
        """Test case for get_messaging_counters

        Return counters for messaging data views.  # noqa: E501
        """
        pass

    def test_get_messaging_stat(self):
        """Test case for get_messaging_stat

        Return messaging statistics.  # noqa: E501
        """
        pass

    def test_get_outbound_message(self):
        """Test case for get_outbound_message

        Get a single message  # noqa: E501
        """
        pass

    def test_get_outbound_messages_history(self):
        """Test case for get_outbound_messages_history

        Get history  # noqa: E501
        """
        pass

    def test_get_push_tokens(self):
        """Test case for get_push_tokens

        Get all device tokens assigned to the current account  # noqa: E501
        """
        pass

    def test_get_scheduled_message(self):
        """Test case for get_scheduled_message

        Get message schedule.  # noqa: E501
        """
        pass

    def test_get_sender_id(self):
        """Test case for get_sender_id

        Get a single Sender ID.  # noqa: E501
        """
        pass

    def test_get_sender_ids(self):
        """Test case for get_sender_ids

        Get all sender IDs of current user.  # noqa: E501
        """
        pass

    def test_get_sender_settings(self):
        """Test case for get_sender_settings

        Get current user sender settings.  # noqa: E501
        """
        pass

    def test_get_spending_stat(self):
        """Test case for get_spending_stat

        Return account spending statistics.  # noqa: E501
        """
        pass

    def test_get_state(self):
        """Test case for get_state

        Get current entities state  # noqa: E501
        """
        pass

    def test_get_subaccount(self):
        """Test case for get_subaccount

        Get a single subaccount.  # noqa: E501
        """
        pass

    def test_get_subaccounts(self):
        """Test case for get_subaccounts

        Get all subaccounts of current user.  # noqa: E501
        """
        pass

    def test_get_subaccounts_with_tokens(self):
        """Test case for get_subaccounts_with_tokens

        Get all subaccounts with their REST API tokens associated with specified app name.  # noqa: E501
        """
        pass

    def test_get_survey(self):
        """Test case for get_survey

        Get a survey by id.  # noqa: E501
        """
        pass

    def test_get_survey_node(self):
        """Test case for get_survey_node

        Get a node by id.  # noqa: E501
        """
        pass

    def test_get_survey_nodes(self):
        """Test case for get_survey_nodes

        Fetch nodes by given survey id.  # noqa: E501
        """
        pass

    def test_get_surveys(self):
        """Test case for get_surveys

        Get all user surveys.  # noqa: E501
        """
        pass

    def test_get_template(self):
        """Test case for get_template

        Get a single template.  # noqa: E501
        """
        pass

    def test_get_timezones(self):
        """Test case for get_timezones

        Return all available timezone IDs.  # noqa: E501
        """
        pass

    def test_get_unread_messages_total(self):
        """Test case for get_unread_messages_total

        Get total amount of unread messages in the current user chats.  # noqa: E501
        """
        pass

    def test_get_unsubscribed_contact(self):
        """Test case for get_unsubscribed_contact

        Get a single unsubscribed contact.  # noqa: E501
        """
        pass

    def test_get_unsubscribers(self):
        """Test case for get_unsubscribers

        Get all contact have unsubscribed from your communication.  # noqa: E501
        """
        pass

    def test_get_user_dedicated_numbers(self):
        """Test case for get_user_dedicated_numbers

        Get user's dedicated numbers.  # noqa: E501
        """
        pass

    def test_get_user_lists(self):
        """Test case for get_user_lists

        Get all user lists.  # noqa: E501
        """
        pass

    def test_get_versions(self):
        """Test case for get_versions

        Get minimal valid apps versions  # noqa: E501
        """
        pass

    def test_invite_subaccount(self):
        """Test case for invite_subaccount

        Invite new subaccount.  # noqa: E501
        """
        pass

    def test_mark_chats_read_bulk(self):
        """Test case for mark_chats_read_bulk

        Mark several chats as read by chat ids or mark all chats as read  # noqa: E501
        """
        pass

    def test_mark_chats_unread_bulk(self):
        """Test case for mark_chats_unread_bulk

        Mark several chats as UNread by chat ids or mark all chats as UNread  # noqa: E501
        """
        pass

    def test_merge_survey_nodes(self):
        """Test case for merge_survey_nodes

        Merge two question nodes.  # noqa: E501
        """
        pass

    def test_mute_chat(self):
        """Test case for mute_chat

        Set mute mode.  # noqa: E501
        """
        pass

    def test_mute_chats_bulk(self):
        """Test case for mute_chats_bulk

        Mute several chats by chat ids or mute all chats  # noqa: E501
        """
        pass

    def test_ping(self):
        """Test case for ping

        Just does a pong.  # noqa: E501
        """
        pass

    def test_reopen_chats_bulk(self):
        """Test case for reopen_chats_bulk

        Reopen chats by chat ids or reopen all chats  # noqa: E501
        """
        pass

    def test_request_new_subaccount_token(self):
        """Test case for request_new_subaccount_token

        Request a new REST API token for subaccount.  # noqa: E501
        """
        pass

    def test_request_sender_id(self):
        """Test case for request_sender_id

        Request for a new Sender ID.  # noqa: E501
        """
        pass

    def test_reset_survey(self):
        """Test case for reset_survey

        Reset a survey flow.  # noqa: E501
        """
        pass

    def test_search_chats(self):
        """Test case for search_chats

        Find chats by inbound or outbound messages text.  # noqa: E501
        """
        pass

    def test_search_chats_by_ids(self):
        """Test case for search_chats_by_ids

        Find chats by IDs.  # noqa: E501
        """
        pass

    def test_search_chats_by_receipent(self):
        """Test case for search_chats_by_receipent

        Find chats by recipient (contact, list name or phone number).  # noqa: E501
        """
        pass

    def test_search_contacts(self):
        """Test case for search_contacts

        Find user contacts by given parameters.  # noqa: E501
        """
        pass

    def test_search_inbound_messages(self):
        """Test case for search_inbound_messages

        Find inbound messages by given parameters.  # noqa: E501
        """
        pass

    def test_search_lists(self):
        """Test case for search_lists

        Find contact lists by given parameters.  # noqa: E501
        """
        pass

    def test_search_outbound_messages(self):
        """Test case for search_outbound_messages

        Find messages  # noqa: E501
        """
        pass

    def test_search_scheduled_messages(self):
        """Test case for search_scheduled_messages

        Find scheduled messages by given parameters.  # noqa: E501
        """
        pass

    def test_search_templates(self):
        """Test case for search_templates

        Find user templates by given parameters.  # noqa: E501
        """
        pass

    def test_send_email_verification_code(self):
        """Test case for send_email_verification_code

        Send user email verification  # noqa: E501
        """
        pass

    def test_send_message(self):
        """Test case for send_message

        Send message  # noqa: E501
        """
        pass

    def test_send_phone_verification_code(self):
        """Test case for send_phone_verification_code

        Send user phone verification  # noqa: E501
        """
        pass

    def test_set_chat_status(self):
        """Test case for set_chat_status

        Set status of the chat given by ID.  # noqa: E501
        """
        pass

    def test_start_survey(self):
        """Test case for start_survey

        Start a survey.  # noqa: E501
        """
        pass

    def test_unblock_contact(self):
        """Test case for unblock_contact

        Unblock contact by phone number.  # noqa: E501
        """
        pass

    def test_unblock_contacts_bulk(self):
        """Test case for unblock_contacts_bulk

        Unblock several contacts by blocked contact ids or unblock all contacts  # noqa: E501
        """
        pass

    def test_unmute_chats_bulk(self):
        """Test case for unmute_chats_bulk

        Unmute several chats by chat ids or unmute all chats  # noqa: E501
        """
        pass

    def test_unsubscribe_contact(self):
        """Test case for unsubscribe_contact

        Unsubscribe contact from your communication by phone number.  # noqa: E501
        """
        pass

    def test_update_balance_notification_settings(self):
        """Test case for update_balance_notification_settings

        Update balance notification settings  # noqa: E501
        """
        pass

    def test_update_callback_settings(self):
        """Test case for update_callback_settings

        Update callback URL settings  # noqa: E501
        """
        pass

    def test_update_chat_desktop_notification_settings(self):
        """Test case for update_chat_desktop_notification_settings

        Update chat desktop notification settings  # noqa: E501
        """
        pass

    def test_update_contact(self):
        """Test case for update_contact

        Update existing contact.  # noqa: E501
        """
        pass

    def test_update_contact_note(self):
        """Test case for update_contact_note

        Update existing contact note.  # noqa: E501
        """
        pass

    def test_update_current_user(self):
        """Test case for update_current_user

        Update current user info.  # noqa: E501
        """
        pass

    def test_update_custom_field(self):
        """Test case for update_custom_field

        Update existing custom field.  # noqa: E501
        """
        pass

    def test_update_custom_field_value(self):
        """Test case for update_custom_field_value

        Update contact's custom field value.  # noqa: E501
        """
        pass

    def test_update_inbound_messages_notification_settings(self):
        """Test case for update_inbound_messages_notification_settings

        Update inbound messages notification settings  # noqa: E501
        """
        pass

    def test_update_list(self):
        """Test case for update_list

        Update existing list.  # noqa: E501
        """
        pass

    def test_update_password(self):
        """Test case for update_password

        Change user password.  # noqa: E501
        """
        pass

    def test_update_sender_setting(self):
        """Test case for update_sender_setting

        Change sender settings for specified country.  # noqa: E501
        """
        pass

    def test_update_survey(self):
        """Test case for update_survey

        Update existing survey.  # noqa: E501
        """
        pass

    def test_update_survey_node(self):
        """Test case for update_survey_node

        Update existing node.  # noqa: E501
        """
        pass

    def test_update_template(self):
        """Test case for update_template

        Update existing template.  # noqa: E501
        """
        pass

    def test_upload_avatar(self):
        """Test case for upload_avatar

        Add an avatar for the current user.  # noqa: E501
        """
        pass

    def test_upload_contact_avatar(self):
        """Test case for upload_contact_avatar

        Add an avatar for the contact.  # noqa: E501
        """
        pass

    def test_upload_list_avatar(self):
        """Test case for upload_list_avatar

        Add an avatar for the list.  # noqa: E501
        """
        pass

    def test_upload_message_attachment(self):
        """Test case for upload_message_attachment

        Upload message attachment  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
